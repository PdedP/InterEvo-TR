/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 16 10:11:51 GMT 2021
 */

package com.org.apache.commons.collections.primitives;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.org.apache.commons.collections.primitives.ArrayIntList;
import java.util.ConcurrentModificationException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ArrayIntList_ES_preferences_Test extends ArrayIntList_ES_preferences_Test_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      arrayIntList0.add(684);
      assertEquals(1, arrayIntList0.size());
      
      arrayIntList0.clear();
      assertEquals(0, arrayIntList0.size());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      arrayIntList0.add((-200));
      boolean boolean0 = arrayIntList0.removeElement((-200));
      assertEquals(0, arrayIntList0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      ArrayIntList arrayIntList1 = new ArrayIntList(arrayIntList0);
      arrayIntList0.add((-197));
      arrayIntList0.add((-200));
      arrayIntList1.addAll(arrayIntList0);
      boolean boolean0 = arrayIntList1.removeAll(arrayIntList0);
      assertEquals(2, arrayIntList0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      ArrayIntList arrayIntList1 = new ArrayIntList(arrayIntList0);
      arrayIntList0.add((-200));
      arrayIntList1.add(315);
      arrayIntList1.addAll(arrayIntList0);
      boolean boolean0 = arrayIntList1.removeElement((-200));
      assertEquals(1, arrayIntList0.size());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      arrayIntList0.add((-200));
      // Undeclared exception!
      try { 
        arrayIntList0.addAll(arrayIntList0);
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.org.apache.commons.collections.primitives.RandomAccessIntList$ComodChecker", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList(315);
      arrayIntList0.add(0);
      arrayIntList0.add((-1));
      int int0 = arrayIntList0.set(1, (-2914));
      assertEquals(2, arrayIntList0.size());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      arrayIntList0.add((-197));
      arrayIntList0.add((-200));
      assertEquals(2, arrayIntList0.size());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ArrayIntList arrayIntList0 = new ArrayIntList();
      assertEquals(0, arrayIntList0.size());
      
      ArrayIntList arrayIntList1 = new ArrayIntList(arrayIntList0);
      arrayIntList0.add((-197));
      arrayIntList1.addAll(arrayIntList0);
      boolean boolean0 = arrayIntList1.removeAll(arrayIntList0);
      assertEquals(1, arrayIntList0.size());
      assertTrue(boolean0);
  }
}
